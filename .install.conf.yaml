- defaults:
    link:
      create: true
      relink: true

- create:
  - ~/.local/bin
  - ~/.local/share

- shell:
  -
    command: git submodule sync --recursive
    description: Syncing submodules
    stdout: true
    stderr: true
  -
    command: git submodule update --init --recursive --depth 1 --jobs $(grep -c '^processor' /proc/cpuinfo)
    description: Updating submodules
    stdout: true
    stderr: true
  -
    command: tools/install/install-fira.sh
    description: Installing FiraCode nerd fonts
    stdout: true
    stderr: true
  -
    command: |
        if [[ ! -x "$(whence -p fasd)" ]]; then
            json_output=$(mktemp)
            curl -L -o $json_output https://api.github.com/repos/clvv/fasd/tags
            tarball_url=$(cat $json_output | egrep -m 1 tarball | sed -E -e 's/^.*":\s*//' -e 's/",?//g')
            rm -f $json_output
            tmpdir=$(mktemp -d)
            tarball="$tmpdir/fasd.tar.gz"
            curl -L -o $tarball $tarball_url
            output_dir=$(tar -xzvf $tarball -C $tmpdir)
            output_dir=$(echo $output_dir | head -n 1)
            PREFIX="$HOME/.local" make -C "$tmpdir/$output_dir" install
            rm -rf $tmpdir
        fi
    description: Installing fasd
    stdout: true
    stderr: true
  -
    command: |
        if [[ ! -d "$HOME/.fzf" ]]; then
            git clone --depth 1 https://github.com/junegunn/fzf.git "$HOME"/.fzf
            "$HOME"/.fzf/install --bin
        fi
    description: Installing fzf
    stdout: true
    stderr: true
  -
    command: |
      if [[ -x "$(whence -p bat)" ]]; then
          bat cache --build
      else
          echo "bat was not found in path"
      fi
    description: Adding Gruvbox bat theme
    stdout: true
    stderr: true
  -
    command: |
      if [[ -x "$(whence -p bat)" ]]; then
          found=true
          for file in tools/bat-extras/src/*.sh; do
              found=$found && [[ -x "$HOME"/.local/bin/"$file" ]]
          done
          if [[ ! $found ]]; then
              tools/bat-extras/build.sh --minify=none --no-verify --prefix="$HOME"/.local --install
          fi
      else
          echo "bat was not found in path"
      fi
    description: Installing bat-extras
    stdout: true
    stderr: true
  -
    command: hash -rf
    description: Rebuilding command hash table
    stdout: true
    stderr: true
  -
    command: |
        if [[ ! -d "$HOME/.config/nvim" ]]; then
            git clone https://github.com/kevineato/CosmicNvim.git "$HOME"/.config/nvim
        fi
    description: Installing neovim config framework
    stdout: true
    stderr: true

- clean: ["~"]

- link:
    ~/.clang-format: clang/clang-format
    ~/.clang-tidy: clang/clang-tidy
    ~/.cmake-format.py: cmake/cmake-format.py
    ~/.config/bat: config/bat
    ~/.config/nvim/UltiSnips: config/nvim/UltiSnips
    ~/.config/nvim/lua/cosmic/config: config/nvim/config
    ~/.config/vifm: config/vifm
    ~/.config/watson/config: config/watson/config
    ~/.gdbinit: tools/gdb-dashboard/.gdbinit
    ~/.gdbinit.d:
    ~/.gitconfig: git/gitconfig
    ~/.local/share/lscolors.sh: tools/LS_COLORS/lscolors.sh
    ~/.p10k.zsh: zsh/p10k.zsh
    ~/.sage:
    ~/.screenrc: screen/screenrc
    ~/.stylua.toml: lua/stylua.toml
    ~/.tmux.conf: tools/.tmux/.tmux.conf
    ~/.tmux.conf.local: tmux/tmux.conf.local
    ~/.zsh:
    ~/.zshrc: zsh/zshrc
