# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# LD_LIBRARY_PATH functions
function lib_remove() {
    LD_LIBRARY_PATH=$(echo -n "$LD_LIBRARY_PATH" | awk -v RS=: -v ORS=: "\$0 != \"$1\"" | sed 's/:$//')
}

function lib_append() {
    lib_remove "$1"
    LD_LIBRARY_PATH="${LD_LIBRARY_PATH:+"$LD_LIBRARY_PATH:"}$1"
}

function lib_prepend() {
    lib_remove "$1"
    LD_LIBRARY_PATH="$1${LD_LIBRARY_PATH:+":$LD_LIBRARY_PATH"}"
}

# PATH functions
function path_remove() {
    PATH=$(echo -n "$PATH" | awk -v RS=: -v ORS=: "\$0 != \"$1\"" | sed 's/:$//')
}

function path_append() {
    path_remove "$1"
    PATH="${PATH:+"$PATH:"}$1"
}

function path_prepend() {
    path_remove "$1"
    PATH="$1${PATH:+":$PATH"}"
}

export ZSH_HOME="$HOME/.zsh"

if [[ -z "$TMUX" ]]; then
    # Check for ruby
    if [[ -d "$HOME/.gem/ruby/2.5.0/bin" ]]; then
        path_append "$HOME/.gem/ruby/2.5.0/bin"
    fi

    # Check for rust
    if [[ -d "$HOME/.cargo/bin" ]]; then
        path_append "$HOME/.cargo/bin"
    fi

    # Check for fzf
    if [[ -d "$HOME/.fzf/bin" ]]; then
        path_append "$HOME/.fzf/bin"
    fi

    # Prepend
    if [[ -d '/snap/bin' ]]; then
        path_prepend '/snap/bin'
    fi
    path_prepend "$HOME/.local/bin"

    # Load nix
    if [[ -e "$HOME/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "$HOME/.nix-profile/etc/profile.d/nix.sh"
    fi

    # Load asdf
    # if [[ -d "$HOME/.asdf" ]]; then
    #     # Load asdf-direnv integration
    #     if [[ -f "$HOME/.config/asdf-direnv/zshrc" ]]; then
    #         source "$HOME/.config/asdf-direnv/zshrc"
    #     fi
    #
    #     # Silence console output from direnv
    #     export DIRENV_LOG_FORMAT=""
    #
    #     # Keep asdf shims
    #     # source "$HOME/.asdf/asdf.sh"
    #     # fpath=("$ASDF_DIR/completions" $fpath)
    #
    #     # Bypass asdf shims completely
    #     path_append "$HOME/.asdf/bin"
    #     fpath=("$HOME/.asdf/completions" $fpath)
    # fi
fi

if [[ -d "$HOME/.nix-profile/share/zsh/site-functions" ]]; then
    fpath=("$HOME/.nix-profile/share/zsh/site-functions" $fpath)
fi

[[ -f "$ZSH_HOME/export.zsh" ]] && source "$ZSH_HOME/export.zsh"

[[ -f "$ZSH_HOME/oh-my-zsh.zsh" ]] && source "$ZSH_HOME/oh-my-zsh.zsh"

[[ -f "$ZSH_HOME/alias.zsh" ]] && source "$ZSH_HOME/alias.zsh"
[[ -f "$ZSH_HOME/function.zsh" ]] && source "$ZSH_HOME/function.zsh"

if [[ -f "$ZSH_HOME/local.zsh" ]]; then source "$ZSH_HOME/local.zsh"; fi

if [[ -f "$HOME/.dircolors" ]]; then eval "$(dircolors $HOME/.dircolors)"; fi
if [[ -r "$HOME/.local/share/lscolors.sh" ]]; then source "$HOME/.local/share/lscolors.sh"; fi
if [[ -x "$(whence -p fasd)" ]]; then eval "$(fasd --init auto)"; fi
if [[ -x "$(whence -p tea)" ]]; then
    add-zsh-hook -Uz chpwd(){ source <(tea -Eds) }
fi

# Widgets
autoload -Uz copy-earlier-word
zle -N copy-earlier-word

# Key bindings
for ((i=1; i < 10; i++)); do
    bindkey -M viins '^['$i digit-argument
done
unset i

bindkey '^[.' insert-last-word
bindkey '^[;' copy-earlier-word
bindkey '^[h' backward-char
bindkey '^[l' forward-char
bindkey '^[H' backward-word
bindkey '^[L' forward-word
bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down
bindkey "${terminfo[kcbt]}" reverse-menu-complete

setopt extendedglob
setopt histignorealldups
setopt histignorespace
setopt magicequalsubst
# setopt rematchpcre
setopt sharehistory

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
